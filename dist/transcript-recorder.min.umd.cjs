(function(n){typeof define=="function"&&define.amd?define(n):n()})(function(){"use strict";window.vorpleTranscriptRecorder=(()=>{let n=!1,l=null,r=!1,a=null,s="",o="",d="";function i(e,t){if(!n)return;const u=`Transcript recorder: ${e}`;t==="warn"||t==="error"?console[t](u):console.log(u)}function c(){a=new Date().getTime().toString()+Math.ceil(Math.random()*1e3).toString()}function p(e){try{s=e}catch(t){console.error(t)}return e}function f(e){o+=e}async function g(e){if(!r)return i("Plugin has been disabled, won't send data"),!1;if(!a)return i("Session id has not been set, transcript recorder plugin has not been initialized?","error"),!1;if(!l)return i("Can't send transcript data, endpoint URL has not been set","error"),!1;try{if(!(await fetch(l,{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})).ok)throw new Error(response.status)}catch(t){return i("Error sending transcript data: "+(t.message??t),"error"),!1}return!0}function m(){const e=new Date().getTime();g({sessionId:a,format:"simple",label:d,input:s,output:o,outtimestamp:e,timestamp:e}),s="",o=""}return{disable:()=>{r=!1,s="",o=""},enable:()=>{r=!0},init:e=>{if(a){i("Transcript recorder: tried to initialize multiple times","warn");return}if(typeof window.vorple!="object")throw new Error("Vorple has not been initialized");d=e,c(),vorple.addEventListener("expectCommand",m),vorple.prompt.addInputFilter(p),vorple.output.addOutputFilter(f),r=!0},insertText:e=>{window.haven.buffer.flush(),o+=e},restartSession:()=>{},setEndpointUrl:e=>l=e,status:()=>r,toggleDebugMode:e=>n=e}})()});
